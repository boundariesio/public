(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{iaV1:function(e,a,t){"use strict";t.r(a);t("q1tI");var o=t("Sv8q"),s=t("qKvR");a.default=function(){return Object(s.a)(o.a,null,Object(s.a)("div",{className:"container mx-auto max-w-4xl"},Object(s.a)("div",null,Object(s.a)("div",null,Object(s.a)("h1",{className:"text-3xl font-semibold border-b my-4 pb-4",id:"api-endpoints"},"The API"),Object(s.a)("p",{className:"font-light py-2"},"boundaries.io is an API for retrieving GeoJSON for common US geographic topologies. Data is mostly comprised of US Census TIGER data&emdash;yielding up-to-date information on the census-defined geographies converted from Shapefile format."),Object(s.a)("p",{className:"font-light py-2"},"You can query the boundaries.io API for free to retrieve GeoJSON documents with the same meta properties as the original shapefiles."),Object(s.a)("p",{className:"text-center"},Object(s.a)("img",{className:"inline-block",src:"http://i.imgur.com/zNSWIag.gif",alt:"demo"})),Object(s.a)("h1",{className:"text-3xl font-semibold border-b my-4 pb-4",id:"api-endpoints"},"API Endpoints"),Object(s.a)("p",{className:"font-light py-2"},"Available geographies are as follows:"),Object(s.a)("p",{className:"font-light py-2"},Object(s.a)("code",{className:"bg-gray-200 px-1"},"states"),",",Object(s.a)("code",{className:"bg-gray-200 px-1"},"postal-codes"),",",Object(s.a)("code",{className:"bg-gray-200 px-1"},"places"),",",Object(s.a)("code",{className:"bg-gray-200 px-1"},"neighborhoods"),",",Object(s.a)("code",{className:"bg-gray-200 px-1"},"counties")),Object(s.a)("p",{className:"font-light py-2"},"These can be substituted anywhere a url references a path segment"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"{geography}")),Object(s.a)("h2",{className:"text-2xl font-semibold border-b my-4 pb-4",id:"text-search"},"Text Search"),Object(s.a)("p",{className:"font-light py-2"},Object(s.a)("code",{className:"bg-gray-200 px-1"},"geographies/","{geography}","?search=","{query}")),Object(s.a)("p",{className:"font-light py-2"},"Geographies can be searched via text to match against all attributes. This is helpful as the property names for certain geographies can be very specific in nature to the geography or datasource. For instance, a common 5-digit US postal code is contained in the property ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"properties.ZCTA5CE10")," in the"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"postal-codes")," geography. In order to not keep track of specific collection-based common names like"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"ZCTA5CE10"),", a search paramter is used on the"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"geographies/","{geography}")," endpoint to search all text fields for a url query"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"?search"),"."),Object(s.a)("p",{className:"font-light py-2"},"Example:"),Object(s.a)("pre",{className:"bg-gray-200 p-2 overflow-x-scroll"},Object(s.a)("code",null,"curl -H 'Accept: application/json' https://api.boundaries.io/geographies/postal-codes?search=33060")),Object(s.a)("h2",{className:"text-2xl font-semibold border-b my-4 pb-4",id:"where-am-i-"},"Where Am I?"),Object(s.a)("p",{className:"font-light py-2"},Object(s.a)("code",null,"geographies/","{geography}","/whereami?lat=","{latitude}","&lng=","{longitude}")),Object(s.a)("p",{className:"font-light py-2"},"When querying the ",Object(s.a)("code",null,"whereami")," endpoint, the geography that contains the provided latitude/longitude pair will be returned if found. For instance, when requesting"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"geographies/postal-codes/whereami?lat=36.011616617997426&lng=-78.9103317260742"),", the GeoJSON for postal-code 27701 will be returned as the lat/lng pair in the querystring is contained in the postal-code geography 27701. The corresponding"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"states")," geography would be north carolina."),Object(s.a)("p",{className:"font-light py-2"},"The corresponding mongodb geospatial query operator is"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"$geoIntersects"),"."),Object(s.a)("p",{className:"font-light py-2"},"Example:"),Object(s.a)("pre",{className:"bg-gray-200 p-2 overflow-x-scroll"},Object(s.a)("code",{className:"bg-gray-200 px-1"},"curl -H 'Accept: application/json' https://api.boundaries.io/geographies/postal-codes/whereami?lat=36.011616617997426&lng=-78.9103317260742")),Object(s.a)("h2",{className:"text-2xl font-semibold border-b my-4 pb-4",id:"named"},"Named"),Object(s.a)("p",{className:"font-light py-2"},Object(s.a)("code",null,"geographies/","{geography}","/named/","{name}")),Object(s.a)("p",{className:"font-light py-2"},"The typical name key for geographies from the US Census TIGER shapefiles is"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"properties.NAME"),", but for postal-codes is",Object(s.a)("code",{className:"bg-gray-200 px-1"},"properties.ZCTA5CE10"),". Geographies can be queried against the identifying key with the ",Object(s.a)("code",null,"named")," endpoint. By making a request to the ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"named")," endpoint, a geography collection can be queried by its common name property. For postal codes this is the 5-digit common code. For states this is the state name."),Object(s.a)("p",{className:"font-light py-2"},"Example:"),Object(s.a)("pre",{className:"bg-gray-200 p-2 overflow-x-scroll"},Object(s.a)("code",null,"curl -H 'accept: application/json' https://api.boundaries.io/geographies/postal-codes/named/27705 curl -H 'accept: application/json' https://api.boundaries.io/geographies/states/named/north%20carolina")),Object(s.a)("h2",{className:"text-2xl font-semibold border-b my-4 pb-4",id:"named-svg-image-"},"Named (SVG Image)"),Object(s.a)("p",{className:"font-light py-2"},Object(s.a)("code",null,"geographies/","{geography}","/named/","{name}",".svg")),Object(s.a)("p",{className:"font-light py-2"},"Parameters:"),Object(s.a)("p",{className:"font-light py-2"},Object(s.a)("code",{className:"bg-gray-200 px-1"},"width"),","," ",Object(s.a)("code",{className:"bg-gray-200 px-1",code:!0},"height"),", ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"stroke"),","," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"fill")),Object(s.a)("p",{className:"font-light py-2"},"Example:"),Object(s.a)("pre",{className:"bg-gray-200 p-2 overflow-x-scroll"},Object(s.a)("code",null,'curl https://api.boundaries.io/geographies/states/named/north%20carolina.svg # => <svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"> # <path d="M64.0623532378737,21.511595932804283')),Object(s.a)("h2",{className:"text-2xl font-semibold border-b my-4 pb-4",id:"near-me"},"Near Me"),Object(s.a)("p",{className:"font-light py-2"},Object(s.a)("code",{className:"bg-gray-200 px-1"},"geographies/","{geography}","/nearme?lat=","{latitude}","&lng=","{longitude}")),Object(s.a)("p",{className:"font-light py-2"},"Similar to the ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"whereami")," endpoint, one can query the nearby geographies with the ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"nearme")," ","endpoint. Simply provide a lat/lng"),Object(s.a)("p",{className:"font-light py-2"},"The corresponding mongodb geospatial query operator is"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"$near"),"."),Object(s.a)("p",{className:"font-light py-2"},"Example:"),Object(s.a)("pre",{className:"bg-gray-200 p-2 overflow-x-scroll"},Object(s.a)("code",null,"curl -H 'Accept: application/json' https://api.boundaries.io/geographies/postal-codes/nearme?lat=36.011616617997426&lng=-78.9103317260742")),Object(s.a)("h2",{className:"text-2xl font-semibold border-b my-4 pb-4",id:"requesting-topojson-data-"},"Requesting TopoJSON data:"),Object(s.a)("p",{className:"font-light py-2"},"The API may also be able to reduce large GeoJSON features by up to 80% in size using"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"topojson"),". To request topojson topologies instead of GeoJSON, simply use an"," ",Object(s.a)("code",{className:"bg-gray-200 px-1"},"Accept: application/topojson")," header in your request to the API. If possible, the geography will be encoded into a topology. See"," ",Object(s.a)("a",{href:"https://github.com/mbostock/topojson/wiki/API-Reference#feature"},Object(s.a)("code",{className:"bg-gray-200 px-1"},"topojson.feature"))," ","for info on transforming this back to GeoJSON on the client side."),Object(s.a)("h3",{id:"where-did-the-data-come-from-"},"Where did the data come from?"),Object(s.a)("p",{className:"font-light py-2"},"Counties, States, Zips, and Places data were collected from",Object(s.a)("a",{href:"https://www.census.gov/geo/maps-data/data/tiger-line.html"},"The US Census Bureau Tiger/LineÂ® Shapefiles")),Object(s.a)("p",{className:"font-light py-2"},"Neighborhood data was sourced from",Object(s.a)("a",{href:"http://www.zillow.com/howto/api/neighborhood-boundaries.htm"},"Zillow's Neighborhood Boundaries")," ","shapefile data and the ",Object(s.a)("a",{href:"http://durhamhoods.com/"},"Durham Hoods")," project.")))))}}}]);
//# sourceMappingURL=component---src-pages-docs-js-80374922902e5b440249.js.map