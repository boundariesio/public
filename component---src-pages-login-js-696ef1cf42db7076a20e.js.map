{"version":3,"sources":["webpack:///./src/pages/login.js"],"names":["accountClient","AccountClient","initialInfo","window","test","location","search","useState","sending","setSending","sent","setSent","error","setError","info","setInfo","email","setEmail","id","className","onSubmit","e","a","preventDefault","requestSession","setTimeout","console","response","status","color","label","htmlFor","type","required","value","onChange","target","placeholder","disabled"],"mappings":"uWAMA,IAAMA,EAAgB,IAAIC,IAEX,qBACb,IAAIC,EACkB,oBAAXC,QAA0B,WAAWC,KAAKD,OAAOE,SAASC,UACnEJ,EAAc,qEAHG,MAKWK,oBAAS,GAAhCC,EALY,KAKHC,EALG,OAMKF,oBAAS,GAA1BG,EANY,KAMNC,EANM,OAOOJ,mBAAS,MAA5BK,EAPY,KAOLC,EAPK,OAQKN,mBAASL,GAA1BY,EARY,KAQNC,EARM,OASOR,mBAAS,IAA5BS,EATY,KASLC,EATK,KAUnB,OACE,YAAC,IAAD,KACE,uBAASC,GAAG,eAAeC,UAAU,2BACnC,mBAAKA,UAAU,iCACb,kBAAIA,UAAU,4BAAd,+CAEE,uBAFF,iDAIA,oBACED,GAAG,QACHC,UAAU,+BACVC,SAAQ,e,EAAA,G,EAAA,UAAE,WAAMC,GAAN,SAAAC,EAAA,6DACRD,EAAEE,iBACFd,GAAW,GACXI,EAAS,MAHD,kBAKAb,EAAcwB,eAAeR,GAL7B,OAMND,EAAQ,+BACRJ,GAAQ,GACRc,YAAW,WACTd,GAAQ,GACRI,EAAQ,QACP,KAXG,kDAaNW,QAAQd,MAAR,MAC4B,MAAxB,KAAIe,SAASC,QACff,EAAS,6CAfL,yBAkBNJ,GAAW,GAlBL,4E,+KAAF,uDAsBR,mBAAKU,UAAU,uBACZL,GACC,YAAC,IAAD,CAAKe,MAAM,SAASV,UAAU,+BAA+BW,MAAM,SACjE,qBAAIhB,KAIV,mBAAKK,UAAU,6BACb,qBACEA,UAAU,qEACVY,QAAQ,SAFV,iBAMA,qBACEZ,UAAU,6KACVD,GAAG,QACHc,KAAK,QACLC,UAAQ,EACRC,MAAOlB,EACPmB,SAAU,SAAAd,GACRJ,EAASI,EAAEe,OAAOF,OAClBvB,GAAQ,IAEV0B,YAAY,4BAGhB,mBAAKlB,UAAU,uBACZP,GACC,YAAC,IAAD,CAAKiB,MAAM,MAAMV,UAAU,4BAA4BW,MAAM,UAC3D,qBAAIlB,KAIV,mBAAKO,UAAU,6BACb,YAAC,IAAD,CAAQA,UAAU,gBAAgBa,KAAK,SAASM,SAAU9B,GACvDE,EAAO,QAAU","file":"component---src-pages-login-js-696ef1cf42db7076a20e.js","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../components/layout/public';\nimport Tip from '../components/tip';\nimport AccountClient from '../services/account-client';\nimport Button from '../components/Button';\n\nconst accountClient = new AccountClient();\n\nexport default () => {\n  let initialInfo;\n  if (typeof window !== 'undefined' && /failed=1/.test(window.location.search)) {\n    initialInfo = 'Your login link expired or an error occurred. Please login again.';\n  }\n  const [sending, setSending] = useState(false);\n  const [sent, setSent] = useState(false);\n  const [error, setError] = useState(null);\n  const [info, setInfo] = useState(initialInfo);\n  const [email, setEmail] = useState('');\n  return (\n    <Layout>\n      <section id=\"testimonials\" className=\"py-12 md:py-20 lg:py-40\">\n        <div className=\"container text-center mx-auto\">\n          <h2 className=\"text-lg sm:text-2xl pb-8\">\n            Enter the email address associated with your\n            <br /> account and a login link will be sent to you\n          </h2>\n          <form\n            id=\"login\"\n            className=\"w-full px-2 max-w-lg mx-auto\"\n            onSubmit={async e => {\n              e.preventDefault();\n              setSending(true);\n              setError(null);\n              try {\n                await accountClient.requestSession(email);\n                setInfo('A login link has been sent!');\n                setSent(true);\n                setTimeout(() => {\n                  setSent(false);\n                  setInfo(null);\n                }, 5000);\n              } catch (err) {\n                console.error(err);\n                if (err.response.status === 404) {\n                  setError('Could not find an account with that email');\n                }\n              } finally {\n                setSending(false);\n              }\n            }}\n          >\n            <div className=\"flex justify-center\">\n              {info && (\n                <Tip color=\"indigo\" className=\"text-xs text-indigo-500 pb-4\" label=\"Info:\">\n                  <p>{info}</p>\n                </Tip>\n              )}\n            </div>\n            <div className=\"flex flex-wrap -mx-3 mb-6\">\n              <label\n                className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n                htmlFor=\"email\"\n              >\n                Email Address\n              </label>\n              <input\n                className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"email\"\n                type=\"email\"\n                required\n                value={email}\n                onChange={e => {\n                  setEmail(e.target.value);\n                  setSent(false);\n                }}\n                placeholder=\"your.email@example.com\"\n              />\n            </div>\n            <div className=\"flex justify-center\">\n              {error && (\n                <Tip color=\"red\" className=\"text-xs text-red-500 pb-4\" label=\"Error:\">\n                  <p>{error}</p>\n                </Tip>\n              )}\n            </div>\n            <div className=\"flex flex-wrap -mx-3 mb-6\">\n              <Button className=\"flex-shrink-0\" type=\"submit\" disabled={sending}>\n                {sent ? 'Sent!' : 'Send Login Link'}\n              </Button>\n            </div>\n          </form>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}